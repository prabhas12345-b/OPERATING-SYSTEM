#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <string.h>

#define SHM_SIZE 1024

int main() {
    int shmid;
    char *shmaddr;
    pid_t pid;

    shmid = shmget(IPC_PRIVATE, SHM_SIZE, IPC_CREAT | 0666);
    if (shmid < 0) {
        perror("shmget");
        exit(1);
    }

    pid = fork();
    if (pid < 0) {
        perror("fork");
        exit(1);
    }

    if (pid == 0) {
        shmaddr = (char*) shmat(shmid, NULL, 0);
        if (shmaddr == (char*)-1) {
            perror("shmat");
            exit(1);
        }
        char message[] = "Hello from Child via Shared Memory!";
        strcpy(shmaddr, message);
        printf("Child wrote: %s\n", message);
        shmdt(shmaddr);
    } else {
        sleep(1);
        shmaddr = (char*) shmat(shmid, NULL, 0);
        if (shmaddr == (char*)-1) {
            perror("shmat");
            exit(1);
        }
        printf("Parent read: %s\n", shmaddr);
        shmdt(shmaddr);
        shmctl(shmid, IPC_RMID, NULL);
    }

    return 0;
}
