#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

sem_t rw_mutex, mutex;
int read_count = 0, data = 0;

void* reader(void* arg) {
    int id = *((int*)arg);
    while(1) {
        sem_wait(&mutex);
        read_count++;
        if (read_count == 1) sem_wait(&rw_mutex);
        sem_post(&mutex);

        printf("Reader %d reads data = %d\n", id, data);
        sleep(1);

        sem_wait(&mutex);
        read_count--;
        if (read_count == 0) sem_post(&rw_mutex);
        sem_post(&mutex);
        sleep(1);
    }
}

void* writer(void* arg) {
    int id = *((int*)arg);
    while(1) {
        sem_wait(&rw_mutex);
        data++;
        printf("Writer %d writes data = %d\n", id, data);
        sem_post(&rw_mutex);
        sleep(2);
    }
}

int main() {
    pthread_t r[3], w[2];
    int i, id[3] = {1,2,3}, wid[2] = {1,2};
    sem_init(&rw_mutex, 0, 1);
    sem_init(&mutex, 0, 1);
    for(i=0;i<3;i++) pthread_create(&r[i], NULL, reader, &id[i]);
    for(i=0;i<2;i++) pthread_create(&w[i], NULL, writer, &wid[i]);
    for(i=0;i<3;i++) pthread_join(r[i], NULL);
    for(i=0;i<2;i++) pthread_join(w[i], NULL);
    return 0;
}
