#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
    pid_t pid;
    printf("Main program started\n");
    printf("Parent PID before fork: %d\n", getpid());

    pid = fork();

    if (pid < 0) {
        perror("fork failed");
        exit(1);
    }

    if (pid == 0) {
        printf("\n--- CHILD PROCESS ---\n");
        printf("Child PID: %d\n", getpid());
        printf("Parent of Child (PPID): %d\n", getppid());
        for (int i = 1; i <= 5; i++) {
            printf("Child working... step %d\n", i);
            sleep(1);
        }
        printf("Child process finished\n");
    } else {
        printf("\n--- PARENT PROCESS ---\n");
        printf("Parent PID: %d\n", getpid());
        printf("Parentâ€™s Parent (PPID): %d\n", getppid());
        for (int i = 1; i <= 5; i++) {
            printf("Parent working... step %d\n", i);
            sleep(1);
        }
        wait(NULL);
        printf("Parent process finished after child\n");
    }
    return 0;
}
